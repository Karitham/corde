// GENERATED BY ./internal/cmd/gen-opt/ DO NOT EDIT.

package components

import "github.com/Karitham/corde/snowflake"

// String returns the Option with key k of type string
func (o OptionsInteractions) String(k string) (string, error) {
	var v string
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}

// Int returns the Option with key k of type int
func (o OptionsInteractions) Int(k string) (int, error) {
	var v int
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}

// Int32 returns the Option with key k of type int32
func (o OptionsInteractions) Int32(k string) (int32, error) {
	var v int32
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}

// Int64 returns the Option with key k of type int64
func (o OptionsInteractions) Int64(k string) (int64, error) {
	var v int64
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}

// Uint returns the Option with key k of type uint
func (o OptionsInteractions) Uint(k string) (uint, error) {
	var v uint
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}

// Uint32 returns the Option with key k of type uint32
func (o OptionsInteractions) Uint32(k string) (uint32, error) {
	var v uint32
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}

// Uint64 returns the Option with key k of type uint64
func (o OptionsInteractions) Uint64(k string) (uint64, error) {
	var v uint64
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}

// Float32 returns the Option with key k of type float32
func (o OptionsInteractions) Float32(k string) (float32, error) {
	var v float32
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}

// Float64 returns the Option with key k of type float64
func (o OptionsInteractions) Float64(k string) (float64, error) {
	var v float64
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}

// Bool returns the Option with key k of type bool
func (o OptionsInteractions) Bool(k string) (bool, error) {
	var v bool
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}

// snowflake.Snowflake returns the Option with key k of type snowflake.Snowflake
func (o OptionsInteractions) Snowflake(k string) (snowflake.Snowflake, error) {
	var v snowflake.Snowflake
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}

// Any returns the Option with key k of type any
func (o OptionsInteractions) Any(k string) (any, error) {
	var v any
	if raw, ok := o[k]; ok {
		if err := raw.UnmarshalTo(&v); err != nil {
			return v, err
		}
	}
	return v, nil
}
